Nixon Kurian
Seat no: T150524278

Questions:

1. Syntax of create View
   -> CREATE VIEW view_name AS SELECT columns FROM tables [WHERE optional];

2. Difference between structured and unstructured
   -> Structured has schema and Unstructured doesn't have schema
   -> Strucutured is good for Relational data and Unstructured is not good
   -> Structured is not flexible and Unstructured is Flexible

3. Languages used in sql
   -> DDL (CREATE DROP ALTER TRUNCATE RENAME), DML (INSERT UPDATE DELETE), 
      DCL(control language, GRANT REVOKE), DQL(SELECT), TCL(COMMIT ROLLBACK SAVE POINT)

4. Difference between primary and unique key
   -> Primary - unique identidier for the row , Unique - unique identifier for row which isn't primary
   -> Primary - cannot accept NULL , Unique -Can accept one NULL
   -> Primary - only one primary key, unique - can have many unique key
   -> Primary - creates clustered index, unique - creates non-clustered index

5. Syntax of ALTER command
   -> ALTER TABLE table_name 1. Add new column 2. Modify column 3. DROP COLUMN 4. RENAME COLUMN(CHANGE col)/ TABLE

6. Parallel and Distributed Database
   -> The Distributed processing is centralized database that can be accessed over a computer network by different sites. 
   -> A parallel DBMS is a DBMS that run accross multiple processor and is designed to execute operations in parallel, whenever possible. 
      Parallel (Shared Memory, Shared Disk and Shared Nothing)

7. DML commands
   -> INSERT DELETE UPDATE

8. ACID property and what does it ensures
   -> Atomicity - The entire transaction takes place at once or doesn't happen at all
   -> Consistency - The db must be consistent before and after the transaction.
   -> Isolation - Multiple transactions occur independently without interference
   -> Durabilty - The changes of a successful transaction occurs even if the system failure occurs
   -> It ensures integrity and consistency

9. Transaction
   -> Transaction group a set of task into single execution unit. Either Success or Failure refer to ACID property

10. Syntax of UPDATE query
    -> UPDATE table_name SET col_name = value WHERE clause

11. Add column after specific column in mysql
    -> ALTER TABLE table_name ADD new_col AFTER specified_col;

12. What is the first field in collection of mongodb created automatically
    -> _id field (unique index)

13. How many no. of bits are present in the id field in mongodb
    -> 12 byte binary value represented as 24 character hex string

14. What are indexes
    -> It is used to add index to a database 

15. What is clustered index
    -> Clustered indexes sort and store the data rows in the table or view based on their key values. 

16. Difference between triggered and stored procedure
    -> trigger is a stored procedure that runs automatically when various events happen (eg update, insert, delete)
    -> Stored procedures are a pieces of the code in written in PL/SQL to do some specific task

17. What is syntax of joining table condition required for joining table
    -> SELECT * FROM table_name JOIN table_name ON col = col;
    -> condition : A join condition involves columns that relate two tables in some logical way.

18. Types of database
    -> Relational DB, NoSQL DB, Centralized DB, Distributed DB, Cloud DB

19. Commands in TCL
    -> COMMIT, ROLLBACK, SAVE POINT

20. Difference between super and candidate key
    -> Super Key is an attribute that is used to uniquely identifies all attributes in a relation.
    -> Candidate is a proper subset of a super key

21. What is view and what are its uses
    -> A view is a virtual or logical table that allows to view or manipulate parts of the tables.
    -> Views can join and simplify multiple tables into a single virtual table. Views can act as aggregated tables, 
   where the database engine aggregates data (sum, average, etc.) and presents the calculated results as part of the data.

22. Query to display duplicate values
    -> use GROUP BY and COUNT in HAVING;

23. Difference between ddl and dml
    -> DDL - It is used to create database schema and can be used to define some constraints as well.
    -> DML - It is used to add, retrieve or update the data.

24. How to connect db in java.
    ->  1. Regiter the JDBC Driver class
	2. Get connection
	3. Create statement
	4. Execute Queries
	5. Close connection

25. Types of sql commands 

26. Normal form 
    -> Normalization is the process of organizing the data in the database.
    -> 1NF - it should contain atomic value and removes multiple-values
    -> 2NF - should be in 1NF and removes partial dependency
    -> 3NF - should be in 2NF and removes transitional dependency
    -> BCNF - should be in 3NF, and for every FD, LHS is super key.

27. JDBC steps
28. Facebook uses which type of database
    -> NoSQL

29. Difference between clustered and Non clustered Index

30. What is equi-join?
    -> equi-join: the records that match both the tables








CAP Theorem :
Consistency
Availablity
Partition Tolerance


BASE:
Basically Available : available all the time according to CAP theorem
Soft State: Even without input system might change
Eventaul consistency: system is consistent


SQL Queries:

CREATE DATABSE database_name;

USE database_name;

CREATE TABLE table_name (
	col_name type,
	col_name type
);

ALTER TABLE table_name ADD col_name type;

DROP TABLE table_name;

INSERT INTO table_name (col_name) VALUES (value);

SELECT * FROM table_name; or to limit result just add table_name LIMIT 3,4,5;

SELECT * FROM table_name ORDER BY col_name;  add DESC as prefix to order in descending order

To get unique rows : SELECT DISTINCT col_name FROM table_name;

UPDATE table_name SET col_name = value; will update all the rows in the col_name so use WHERE clause

SELECT * FROM table_name WHERE condt. ;

For string
SELECT * FROM table_name WHERE name LIKE '_abc%';  % - multiple characters,  _ - single character

DELETE FROM table_name; will delete every single row so use WHERE clause


* JOINS:

SELECT * FROM table_name1 JOIN table_name2 ON table_name1.col = table_name2.col;

INNER JOIN , LEFT JOIN , RIGHT JOIN

AGGREGATE FUNCTIONS:

AVG()
SUM()
COUNT()


GROUP BY has HAVING; to filter the result





MongoDB

Document (ROW) - A record in mongodb is a document, which is a data structure composed of fields and values pair. 
Mongodb documents are similar to JSON object.
Collection (TABLE) - Documents are stored in collection. Documents that are stored in a collection must have an unique_id field.
However documents do not need to share the same schema.
Database (DATABASE) - A mongo database is made up of one or many collections. Each database gets its own set of files on the file sys.

Documents are aggregated in tree-like structures.

Queries:

show dbs : will show all databases

use database_name : if database_name doesn't exist it'll create the database

db : will show the current db you are working in

db.createCollection("collection_name"); - will create a collection

show collections : will show all collections in the current database

db.collection_name.drop(); - will drop the collection_name

db.dropDatabase(); - will drop the database

db.collection_name.insert({name: "Anna", age: 32, isBuyer: false}); - will insert a document

db.collection_name.insert([{name: "Silvia", age:28, isBuyer: false},
			   {name: "Chris", age:32, isBuyer: true}]);

db.collection_name.find({});  - will display all documents add .pretty(); to make it look beautiful and readable

db.collection_name.find({}, {name:1, _id:0});  - will display only name. (1 - true/show, 0 - false/don't show)

db.collection_name.find({}).count();  - will give the number of entries/documents


Filter and Search

db.collection_name.find({name: "Anna"});  - will display the document where name = Anna

db.collection_name.find({age: {$lt: 30}}); - display documents where age is less than 30 
lt - less than , gt - greater than , lte - less than or equal, gte - greater than or equal 

db.collection_name.find({name: /a/}); - display documents that have a in their name
/^ / - starts with

db.collection_name.find({}).sort({age: 1});  - (1 - in ascending , -1 - in descending)


Update Documents:

db.collection_name.update({_id:ObjectId(kdjbvjs824sjdnf)}, {$set:{name:"Claudia"}});  - will update name 
to update more than one add {multi: true}


Delete Documents:

db.collection_name.remove({ param });



SQL vs NoSQL

SQL:
Data uses Schemas
Relations!
Data is distributed across multiple tables
Horizontal scaling(Adding more servers) is difficult/impossible, Vertical scaling(Improving server capacity) is possible

NpSQL:
Schema-Less
No Relations
Data is typically merged/ nested in a few collections
Both vertical and horizontal scaling is possible
Great performance for mass(simple) read&write requests



JDBC :

JDBC Drivers:
4 types:
1. JDBC-ODBC bridge driver
2. Native-API driver (partially java driver)
3. Network Protocol driver (Fully java driver) (client-server-database)
4. Thin driver (fully java driver)

5 steps to connect java to database using JDBC:

1. Regiter the JDBC Driver class
2. Get connection
3. Create statement
4. Execute Queries
5. Close connection

Example :

import java.sql.*;
class __ {
public static void main(Sting args[]) {

//step 1: Load the driver class
Class.forName('driverclass.jdbc.driver');

//step 2: create the connection object
Connection con = DriverManager.getConnection("something.something:localhost");

//step 3: create the statement object
Statement stmt = con.createStatement();

//step 4: execute the query
ResultSet rs = stmt.executeQuery("select * from table_name");

//step 5: close connection
con.close();

}
}



















 

